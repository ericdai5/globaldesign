---
import { getLanguageFromURL } from '../../languages';
import { SIDEBAR } from '../../config';
import ThemeToggleButton from '../Header/ThemeToggleButton';

type Props = {
	currentPage: string;
};

const { currentPage } = Astro.props as Props;
const currentPageMatch = currentPage.endsWith('/')
	? currentPage.slice(1, -1)
	: currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];
---

<nav aria-labelledby="grid-left">
	<ul class="nav-groups">
		{Object.entries(sidebar).map(([header, children]) => (
			/*
			<li>
				<div class="nav-group">
					<h4>{header}</h4>
					<ul>
						{children.map((child) => {
							const url = Astro.site?.pathname + child.link;
							return (
								<li class="nav-link">
									<a href={url} aria-current={currentPageMatch === child.link ? 'page' : false}>
										{child.text}
									</a>
								</li>
							);
						})}
					</ul>
				</div>
			</li>
			*/
			<li class="nav-group">
			<details>
				<summary class="nav-group-title noselect">
					<h2>
						{header}
						<svg
							xmlns="http://www.w3.org/2000/svg"
							viewBox="0 1 16 16"
							width="16"
							height="16"
							aria-hidden="true"
						>
							<path
								fill-rule="evenodd"
								d="M6.22 3.22a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L9.94 8 6.22 4.28a.75.75 0 010-1.06z"
							/>
						</svg>
					</h2>
				</summary>
				<ul>
					{children.map((child) => {
							const url = Astro.site?.pathname + child.link;
							return (
								<li class="nav-link">
									<a href={url} aria-current={currentPageMatch === child.link ? 'page' : false}>
										{child.text}
									</a>
								</li>
							);
						})}
				</ul>
			</details>
		</li>
		))}
		<li style="text-align: center;">
			<ThemeToggleButton 
			client:visible
			isInsideHeader={false} 
			/>
		</li>
	</ul>
</nav>

<!-- 
<script is:inline>
	window.addEventListener('DOMContentLoaded', () => {
		var target = document.querySelector('[aria-current="page"]');
		if (target && target.offsetTop > window.innerHeight - 100) {
			document.querySelector('.nav-groups').scrollTop = target.offsetTop;
		}
	});
</script>
-->

<script>
	window.addEventListener('DOMContentLoaded', () => {
		var target = document.querySelector('[aria-current="page"]');
		target?.scrollIntoView({ block: 'center' });
	});
</script>

<style>
	/* the top summary of each list settings */
	summary h2 {
		all: inherit;
		margin: 0;
		padding-top: 0;
		padding-right: 0;
		padding-bottom: 0;
		padding-left: 0.5rem;
		font-weight: 600;
		display: flex;
		justify-content: space-between;
		align-items: center;
		background-color: transparent;
	}
	
	.nav-group {
		display: block;
	}

	/* title of section */
	.nav-group-title {
		font-size: 1em;
		font-weight: 600;
		margin-right: 1rem;
		padding-top: 0.5rem;
		padding-bottom: 0.5rem;
		padding-left: 1rem;
		padding-right: 1rem;
		border-radius: 99em;
		transition: all 0.1s;
	}

	.nav-group-title:hover {
		display: block;
		margin-right: 1rem;
		padding-top: 0.5rem;
		padding-bottom: 0.5rem;
		padding-left: 1rem;
		padding-right: 1rem;
		border-radius: 99em;
		background-color: var(--theme-bg-hover);
	}

	details > summary {
		list-style: none;
	}

	details > summary::marker,
	details > summary::-webkit-details-marker {
		display: none;
	}

	details[open] > summary svg {
		transform: rotate(90deg);
	}

	summary {
		cursor: pointer;
		justify-content: end;
	}

	svg {
		transform: rotate(0);
		transition: 0.15s transform ease;
		vertical-align: middle;	
	}

	/* the entire nav and its fonts */
	nav {
		width: 100%;
		height: 100%;
		font-size: var(--theme-text-md);
		border-right: 1px solid var(--theme-divider);
	}

	.nav-groups {
		max-height: 100%;
		padding-top: 1rem;
		overflow-x: visible;
		overflow-y: overlay;
	}

	/* space in between the sections */
	.nav-groups > li + li {
		margin-top: 0.5rem;
	}


	/* first section on menu 
	.nav-groups > :first-child {
		padding-top: var(--doc-padding);
	}
	*/

	/* last section on menu */
	.nav-groups > :last-child {
		margin-bottom: var(--theme-navbar-height);
	}

	/* for each link tab */
	.nav-link a {
		font-size: 1rem;
		margin-top: 0.5rem;
		margin-right: 2rem;
		margin-left: 2rem;
		padding-top: 0.5rem;
		padding-bottom: 0.5rem;
		padding-left: 1.5rem;
		padding-right: 1rem;
		font: inherit;
		color: inherit;
		text-decoration: none;
		display: block;
		border-radius: 99em;
		transition: all 0.1s;
	}

	.nav-link a:hover,
	.nav-link a:focus {
		background-color: var(--theme-bg-hover);
	}

	.nav-link a[aria-current='page'] {
		color: var(--theme-text-accent);
		background-color: var(--theme-bg-accent);
		font-weight: 600;
	}

	@media (min-width: 50em) {
		.nav-groups {
			padding: 0;
		}
	}

	svg path {
		fill: currentColor;
	}
</style>

<style is:global>
	:root.theme-dark .nav-link a[aria-current='page'] {
		color: hsla(var(--color-base-white), 100%, 1);
	}
</style>
